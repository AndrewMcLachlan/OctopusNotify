<Window x:Class="OctopusNotify.App.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OctopusNotify.App"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:OctopusNotify.App.ViewModels"
        xmlns:comm="clr-namespace:OctopusNotify.App.Commands"
        xmlns:vr="clr-namespace:OctopusNotify.App.ValidationRules"
        Closing="Window_Closing"
        Title="Settings" Height="398.855" Width="557.094" ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <vm:SettingsViewModel />
    </Window.DataContext>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Save" CanExecute="CommandBinding_CanExecute" Executed="SaveCommandBinding_Executed" />
        <CommandBinding Command="local:AppCommands.Test" CanExecute="CommandBinding_CanExecute" Executed="TestCommandBinding_Executed" />
    </Window.CommandBindings>

    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <GroupBox Header="Server Settings" Margin="10,10,10,10">
                <StackPanel>
                    <Label x:Name="ServerUrlLabel" Content="Server URL:" HorizontalAlignment="Left" Margin="5,10,0,0" VerticalAlignment="Top"/>
                    <TextBox x:Name="ServerUrlText" Height="23" TextWrapping="NoWrap" Margin="10,0,10,0" VerticalAlignment="Top" Validation.Error="Validation_Error" Width="221" MaxWidth="221">
                        <Binding Path="ServerUrl"
                         Mode="TwoWay"
                         UpdateSourceTrigger="LostFocus"
                         ValidatesOnNotifyDataErrors="True"
                         ValidatesOnDataErrors="True"
                         NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <vr:RequiredValidationRule />
                                <vr:UrlValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                    <StackPanel Orientation="Horizontal" Margin="5,10,0,0">
                    <Label x:Name="APiKeyLabel" Content="API Key:"  VerticalAlignment="Top" />
                    <!--<TextBlock x:Name="textBlock2" Margin="5,0,0,0" VerticalAlignment="Center">
                            <Hyperlink NavigateUri="{Binding ApiKeyUri}" RequestNavigate="Hyperlink_RequestNavigate">
                                How do I get an API key?
                            </Hyperlink>
                    </TextBlock>-->
                    </StackPanel>
                    <TextBox x:Name="ApiKeyText" Height="23" Margin="10,0,10,0" TextWrapping="NoWrap" VerticalAlignment="Top" Validation.Error="Validation_Error" TextChanged="ApiKeyText_TextChanged" Width="221" MaxWidth="221">
                    </TextBox>
                    <Label x:Name="label" Content="Existing keys are not shown for security reasons" FontSize="11" Margin="0,0,0,0" HorizontalAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
                        <TextBlock x:Name="textBlock" TextWrapping="Wrap" VerticalAlignment="Center" Margin="10,0,0,0">
                            <Hyperlink NavigateUri="{Binding ApiKeyUri}" RequestNavigate="Hyperlink_RequestNavigate">
                                How do I get an API key?
                            </Hyperlink>
                        </TextBlock>
                        <Button x:Name="TestButton" Content="Test" HorizontalAlignment="Right" Margin="15,5,0,0" VerticalAlignment="Top" Width="75" IsDefault="True" Command="local:AppCommands.Test" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Alert Settings" Margin="10,10,10,10" Width="250">
                <StackPanel>
                    <CheckBox Content="Alert on new failed build" Margin="10,10,10,10" IsChecked="{Binding AlertOnNewFailedBuild}" />
                    <CheckBox Content="Alert on all failed builds" Margin="10,10,10,10" IsChecked="{Binding AlertOnFailedBuild }" />
                    <CheckBox Content="Alert on fixed build" Margin="10,10,10,10" IsChecked="{Binding AlertOnFixedBuild}" />
                    <CheckBox Content="Alert on all successful builds" Margin="10,10,10,10" IsChecked="{Binding AlertOnSuccessfulBuild}" />
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label x:Name="IntervalLabel" Content="Poll Octopus every" />
                        <TextBox x:Name="IntervalTime" Height="23" TextWrapping="NoWrap" VerticalAlignment="Top" Width="32" Text="{Binding IntervalTime }" PreviewTextInput="IntervalTime_PreviewTextInput" DataObject.Pasting="IntervalTime_Pasting">
                        </TextBox>
                        <Label x:Name="IntervalLabel2" Content="seconds" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <GroupBox Header="Application Settings" Margin="10,0,10,10">
            <CheckBox x:Name="StartWhenWindowsStarts" Content="Run Octopus Notify on startup" Margin="10,10,10,10" IsChecked="{Binding RunOnStartup}">
            </CheckBox>
        </GroupBox>
        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button x:Name="OKButton" Content="OK" HorizontalAlignment="Right" Margin="10,10,10,0" VerticalAlignment="Top" Width="75" IsDefault="True" Command="Save" />
        </StackPanel>
    </StackPanel>
</Window>
